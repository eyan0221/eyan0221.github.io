<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[nyan~]]></title>
  <link href="http://eyan0221.github.io/atom.xml" rel="self"/>
  <link href="http://eyan0221.github.io/"/>
  <updated>2014-09-10T15:29:18+08:00</updated>
  <id>http://eyan0221.github.io/</id>
  <author>
    <name><![CDATA[Emma Yan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux Kernel]]></title>
    <link href="http://eyan0221.github.io/blog/2014/09/10/linux-kernel/"/>
    <updated>2014-09-10T15:11:33+08:00</updated>
    <id>http://eyan0221.github.io/blog/2014/09/10/linux-kernel</id>
    <content type="html"><![CDATA[<h2>Debugger</h2>

<ul>
<li>kgdb</li>
<li><p>gdb</p></li>
<li><p><a href="https://www.kernel.org/doc/Documentation/kmemleak.txt">kmemleak</a></p></li>
</ul>


<p>Step1: update .config and rebuild/flash kernel</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">CONFIG_DEBUG_KMEMLEAK</span>
</span></code></pre></td></tr></table></div></figure>


<p>Step2: Get memory leak information</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$cat</span> /sys/kernel/debug/kmemleak          <span class="c"># get log</span>
</span><span class='line'><span class="nv">$echo</span> scan &gt; /sys/kernel/debug/kmemleak  <span class="c"># trigger memory scan</span>
</span><span class='line'><span class="nv">$echo</span> clear &gt; /sys/kernel/debug/kmemleak <span class="c"># clear memory leaks</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>debug_slab</li>
</ul>


<p>Step1: Revert this commit</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>commit 3ff84a7f36554b257cd57325b1a7c1fa4b49fbe3
</span><span class='line'>Author: Pekka Enberg &lt;penberg@kernel.org&gt;
</span><span class='line'>Date:  Mon Feb 14 17:46:21 2011 +0200
</span><span class='line'>
</span><span class='line'>   Revert "slab: Fix missing DEBUG_SLAB last user"</span></code></pre></td></tr></table></div></figure>


<p>Step2: update .config and rebuild/flash kernel</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">CONFIG_DEBUG_SLAB</span>
</span><span class='line'><span class="n">CONFIG_DEBUG_SLAB_LEAK</span>
</span></code></pre></td></tr></table></div></figure>


<p>Step3: Get slab information</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$cat</span> /proc/slab_allocators
</span><span class='line'><span class="nv">$cat</span> /proc/slabinfo
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ftrace</li>
</ul>


<h2>Optimization</h2>

<ul>
<li><a href="http://www.linux.com/news/featured-blogs/200-libby-clark/710319-intro-to-real-time-linux-for-embedded-developers">Introduction to Real Time Linux</a></li>
<li><a href="http://elinux.org/Kernel_Size_Tuning_Guide">Kernel Size Tuning Guide</a></li>
</ul>


<h2>Terminology</h2>

<ul>
<li><a href="http://devicetree.org/Device_Tree_Usage">Device Tree</a></li>
<li><a href="http://kernelnewbies.org/FAQ/LikelyUnlikely">LIKELY and UNLIKELY</a></li>
<li><a href="http://man7.org/linux/man-pages/man3/errno.3.html">errno</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Tips]]></title>
    <link href="http://eyan0221.github.io/blog/2014/09/09/ubuntu-tips/"/>
    <updated>2014-09-09T18:35:34+08:00</updated>
    <id>http://eyan0221.github.io/blog/2014/09/09/ubuntu-tips</id>
    <content type="html"><![CDATA[<h2>vim</h2>

<p><img src="http://www.viemu.com/vi-vim-cheat-sheet.gif" alt="vim cheatsheet" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.               # Position of the last change
</span><span class='line'>' or `          # Position before last jump
</span><span class='line'>`. or '.        # Go back to last edit top
</span><span class='line'>:               # command mode
</span><span class='line'>:set paste      # auto indent for code paste
</span><span class='line'>:set number     # display line number
</span><span class='line'>:1,$s/&lt;target string&gt;/&lt;replace string&gt;/ # replace strings</span></code></pre></td></tr></table></div></figure>


<h2><a href="http://softsmith.blogspot.tw/2009/01/vim-cscope-trace.html">cscope</a></h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cscope -bkR     # create tags
</span><span class='line'>ctrl-]          # go to symbol
</span><span class='line'>ctrl-t          # return to last tag stack</span></code></pre></td></tr></table></div></figure>


<h2><a href="http://blog.longwin.com.tw/2011/04/tmux-learn-screen-config-2011/">tmux</a></h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tmux ls                             # list tmux sessions
</span><span class='line'>tmux new session -s [session name]  # create new session
</span><span class='line'>tmux attach -t [session name]       # attach session
</span><span class='line'>ctrl-b + c                          # create new window
</span><span class='line'>ctrl-b + ,                          # rename window
</span><span class='line'>ctrl-b + w                          # switch windows
</span><span class='line'>ctrl-b + s                          # switch sessions</span></code></pre></td></tr></table></div></figure>


<h2>Remote Desktop</h2>

<ul>
<li>Access Windows OS Desktop</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rdesktop -u <span class="s2">&quot;[domain name]\[account]&quot;</span> -g 1920x1080 -D <span class="o">[</span>ip address<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Access Ubuntu Shared Folders</li>
</ul>


<p>Check <a href="http://www.7tutorials.com/how-access-ubuntu-shared-folders-windows-7">link</a></p>

<h2>Mount</h2>

<ul>
<li>Samba</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir /media/test/
</span><span class='line'>sudo mount.cifs //<span class="o">[</span>path to share folder<span class="o">]</span> /media/test/ -o <span class="nv">username</span><span class="o">=[</span>account<span class="o">]</span>,password<span class="o">=</span><span class="s2">&quot;[password]&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>ISO Image</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir /media/iso/
</span><span class='line'>sudo mount <span class="o">[</span>file<span class="o">]</span>.iso /media/iso/ -t iso9660 -o loop
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android]]></title>
    <link href="http://eyan0221.github.io/blog/2014/09/09/android-tools/"/>
    <updated>2014-09-09T16:44:09+08:00</updated>
    <id>http://eyan0221.github.io/blog/2014/09/09/android-tools</id>
    <content type="html"><![CDATA[<h2><a href="https://source.android.com/source/build-numbers.html">Codenames</a></h2>

<h2><a href="https://www.google.com/events/io/">Google I/O</a></h2>

<ul>
<li><a href="https://developers.google.com/events/io/2013/sessions">2013</a></li>
<li><a href="https://developers.google.com/events/io/2012/">2012</a></li>
</ul>


<h2>Debug</h2>

<ul>
<li><a href="http://developer.android.com/tools/help/systrace.html">Systrace</a></li>
<li><a href="http://developer.android.com/tools/help/uiautomator/index.html">uiautomator</a></li>
<li><a href="http://sujaiantony.wordpress.com/">Memory leak debugging with libc</a></li>
<li><a href="http://elinux.org/Android_Memory_Usage">Android Memory Usage</a></li>
<li><a href="http://elinux.org/Android_logger">Logger</a></li>
<li><a href="http://stackoverflow.com/questions/1069066/how-can-i-get-the-current-stack-trace">CallStack in Java</a></li>
<li><a href="http://stackoverflow.com/questions/11470190/how-to-use-callstack-in-callstack-tpp-in-a-executable-on-android-platform">CallStack in C/C++</a></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;utils/CallStack.h&gt;</span>
</span><span class='line'><span class="n">CallStack</span> <span class="n">stack</span><span class="p">;</span>
</span><span class='line'><span class="n">stack</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="s">&quot;[log prefix]&quot;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>KeyEvent</li>
</ul>


<p>Find keycode in <a href="https://android.googlesource.com/platform/frameworks/base.git/+/076357b8567458d4b6dfdcf839ef751634cd2bfb/core/java/android/view/KeyEvent.java#27">frameworks/base/core/java/android/view/KeyEvent.java</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$adb</span> shell input keyevent <span class="o">[</span>key code<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Optimization</h2>

<ul>
<li><p><a href="http://www.slideshare.net/kanru/android-boot-time-optimization">Boot time</a></p></li>
<li><p><a href="http://elinux.org/Using_Bootchart_on_Android">bootchart</a></p></li>
</ul>


<p>Step1: Installing the bootchart tool</p>

<p>Download <a href="http://www.bootchart.org/download.html">bootchart</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$tar</span> xjf bootchart-0.9.tar.bz2
</span><span class='line'><span class="nv">$cd</span> bootchart-0.9
</span><span class='line'><span class="nv">$sudo</span> ./install.sh
</span></code></pre></td></tr></table></div></figure>


<p>Step2: Compile init with bootchart enabled and flash images</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$touch</span> <span class="o">[</span>mydroid<span class="o">]</span>/system/core/init/init.c
</span><span class='line'><span class="nv">$export</span> <span class="nv">INIT_BOOTCHART</span><span class="o">=</span><span class="nb">true</span>
</span><span class='line'><span class="nv">$m</span> init ramdisk bootimage
</span></code></pre></td></tr></table></div></figure>


<p>Step3: Trigger bootchart</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$adb</span> shell <span class="s1">&#39;echo 20 &gt; /data/bootchart-start&#39;</span>
</span><span class='line'><span class="nv">$adb</span> shell mkdir /data/bootchart
</span></code></pre></td></tr></table></div></figure>


<p>Step4: Get bootchart.tgz</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$/</span>system/core/init/grab-bootchart.sh
</span></code></pre></td></tr></table></div></figure>


<p>Step5: Generate bootchart image</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$java</span> -jar <span class="o">[</span>path to bootchart<span class="o">]</span>/bootchart-0.9/bootchart.jar bootchart.tgz
</span></code></pre></td></tr></table></div></figure>


<h2>Display</h2>

<ul>
<li><p><a href="https://www.sven.de/dpi/">DPI Calculator</a></p></li>
<li><p>Display Timeout</p></li>
</ul>


<figure class='code'><figcaption><span>set display timeout and stay awake </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$adb</span> shell
</span><span class='line'><span class="c">#sqlite3 /data/data/com.android.providers.settings/databases/settings.db</span>
</span><span class='line'><span class="c">#update system set value=&quot;1800000&quot; where name=&quot;screen_off_timeout&quot;;</span>
</span><span class='line'><span class="c">#update system set value=&quot;3&quot; where name=&quot;stay_on_while_plugged_in&quot;;</span>
</span><span class='line'><span class="c">#.exit</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Code Snippet</h2>

<ul>
<li>Property Permission</li>
</ul>


<p><a href="https://android.googlesource.com/platform/system/core/+/fb1c9cf6fa4efafb3e0c6b0bc93c7f087d926a48/init/property_service.c#58">system/core/init/property_service.c</a></p>

<ul>
<li>Device ID</li>
</ul>


<figure class='code'><figcaption><span>Device ID </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$adb</span> shell cat /sys/class/android_usb/android0/iSerial
</span><span class='line'><span class="nv">$adb</span> shell getprop ro.serialno
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>out/target/product/[target name]/recovery/root/init.rc </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">write</span> <span class="o">/</span><span class="n">sys</span><span class="o">/</span><span class="n">class</span><span class="o">/</span><span class="n">android_usb</span><span class="o">/</span><span class="n">android0</span><span class="o">/</span><span class="n">iSerial</span> <span class="err">$</span><span class="p">{</span><span class="n">ro</span><span class="p">.</span><span class="n">serialno</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>system/core/init/init.c </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="n">property_set</span><span class="p">(</span><span class="s">&quot;ro.serialno&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Others</h2>

<figure class='code'><figcaption><span>Open Browser with url </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$adb</span> shell am start <span class="o">[</span>url<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Start Java App </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$adb</span> shell am start -n <span class="o">[</span>com.package.name<span class="o">]</span>/<span class="o">[</span>com.package.name.ActivityName<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Playback Video </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$adb</span> shell am start -a android.intent.action.VIEW -d ////<span class="o">[</span>path to video<span class="o">]</span>/<span class="o">[</span>video file name<span class="o">]</span> -t video/* -n com.android.gallery3d/.app.MovieActivity
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SurfaceFlinger]]></title>
    <link href="http://eyan0221.github.io/blog/2014/09/09/surfaceflinger/"/>
    <updated>2014-09-09T15:54:50+08:00</updated>
    <id>http://eyan0221.github.io/blog/2014/09/09/surfaceflinger</id>
    <content type="html"><![CDATA[<h2>Dump of SERVICE SurfaceFlinger</h2>

<p>Find more information about <a href="https://source.android.com/devices/tech/input/dumpsys.html">dumpsys</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb shell dumpsys SurfaceFlinger
</span></code></pre></td></tr></table></div></figure>


<h2>Frame Latency</h2>

<figure class='code'><figcaption><span>Prints information about last 128 frames displayed in specific window </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb shell dumpsys SurfaceFlinger --latency <span class="o">[</span>window name<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>According to <a href="https://android.googlesource.com/platform/external/chromium_org/+/d0247b1/build/android/pylib/perf/surface_stats_collector.py#215">output definitive</a>,
The data returned looks like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>16954612
</span><span class='line'>7657467895508 7657482691352 7657493499756
</span><span class='line'>7657484466553 7657499645964 7657511077881
</span><span class='line'>7657500793457 7657516600576 7657527404785
</span><span class='line'>(...)</span></code></pre></td></tr></table></div></figure>


<p>The first line is the refresh period (here 16.95 ms), it is followed
by 128 lines w/ 3 timestamps in nanosecond each:</p>

<p>A) when the app started to draw <br/>
B) the vsync immediately preceding SF submitting the frame to the h/w <br/>
C) timestamp immediately after SF submitted that frame to the h/w <br/></p>

<p>The difference between the 1st and 3rd timestamp is the frame-latency.</p>

<h2>Observe composite rate in logcat</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb shell service call SurfaceFlinger <span class="m">1001</span> i32 1
</span></code></pre></td></tr></table></div></figure>


<h2>Force using SurfaceFlinger as compositor</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adb shell service call SurfaceFlinger <span class="m">1008</span> i32 1
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Tips]]></title>
    <link href="http://eyan0221.github.io/blog/2014/09/05/git-tips/"/>
    <updated>2014-09-05T22:04:26+08:00</updated>
    <id>http://eyan0221.github.io/blog/2014/09/05/git-tips</id>
    <content type="html"><![CDATA[<ul>
<li>Find commit list which contains [function]</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git show `git log --oneline [path-to-file] | cut -c 1-8` | egrep -rs "[function]|commit"</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Search</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git log --oneline --author=[email]
</span><span class='line'>git branch --contains [commit id]
</span><span class='line'>git log -S"keyword" [path-to-file]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Change Author</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git commit --amend --author=[email]</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Rebase</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git rebase -i HEAD~[number_of_commits]
</span><span class='line'>edit
</span><span class='line'>git commit --amend
</span><span class='line'>git rebase --continue</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Reset</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git reset --hard [commit-id]
</span><span class='line'>git reset --soft @{1}
</span><span class='line'>git reset --hard HEAD
</span><span class='line'>git reset --hard HEAD^</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Remote</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git branch -r
</span><span class='line'>git remote show origin</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Diff</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git log --oneline [tag1]..[tag2]
</span><span class='line'>git log --oneline [branch1]..[branch2]</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github Pages and Octopress]]></title>
    <link href="http://eyan0221.github.io/blog/2014/09/05/github-page-and-octopress/"/>
    <updated>2014-09-05T17:37:05+08:00</updated>
    <id>http://eyan0221.github.io/blog/2014/09/05/github-page-and-octopress</id>
    <content type="html"><![CDATA[<p>One way to create and write your own blog.</p>

<h2>Create new repository in github</h2>

<p>For example, eyan0221.github.io.git</p>

<h2>Install rvm</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -L https://get.rvm.io | bash -s stable
</span><span class='line'>rvm install 1.9.3
</span><span class='line'>rvm use 1.9.3
</span><span class='line'>ruby --version</span></code></pre></td></tr></table></div></figure>


<h2>Setup Octopress</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress/
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h2>Deploy Github Pages</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install nodejs
</span><span class='line'>rake setup_github_pages
</span><span class='line'>rake new_post
</span><span class='line'>rake preview        # check output in http://localhost:4000
</span><span class='line'>rake generate
</span><span class='line'>rake deploy
</span><span class='line'>git push git@github.com:eyan0221/eyan0221.github.io.git source</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<ol>
<li><a href="http://zerodie.github.io/blog/2012/01/19/octopress-github-pages/">zerodie Github</a></li>
<li><a href="http://octopress.org/docs/setup/">Octopress Setup</a></li>
<li><a href="http://daringfireball.net/projects/markdown/syntax">Markdown Syntax</a></li>
<li><a href="http://en.wikipedia.org/wiki/Markdown">Markdown Wiki</a></li>
<li><a href="http://brizzled.clapper.org/blog/2012/02/04/generating-a-table-of-contents-in-octopress/">TOC in Octopress</a></li>
<li><a href="https://github.com/bmc/brizzled">brizzled github</a></li>
<li><a href="http://jkamenik.github.io/blog/2013/07/07/octopress-toc/">Another Octopress TOC</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
